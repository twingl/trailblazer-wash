/** @jsx React.DOM */
var React = require('react');

module.exports = React.createClass({displayName: 'exports',
  getInitialState: function () {
    //possible antipattern of props in state
    return {
      editable: false,
      initValue: this.props.title
    };
  },

  render: function () {
    var editable = this.state.editable;

    if (editable) {
      return React.DOM.input({
              type: "text",
              value: this.state.initValue,
              autoFocus: true,
              onChange: this.handleChange,
              onBlur: this.handleBlur,
              onFocus: function(evt) {
                evt.target.select();
              },
              onKeyPress: function(evt) {
                if (evt.key === 'Enter') this.handleBlur();
                if (evt.key === 'Escape') {
                  this.state.initValue = this.props.title;
                  this.setState({editable: false});
                  this.handleBlur();
                }
              }.bind(this)
            });
    } else {
      return  React.DOM.a({
                  href: "#",
                  onClick: this.handleIconClick
                },
                React.DOM.span({}, this.state.initValue),
                React.DOM.img({
                  onClick: this.handleIconClick,
                  src: "/ui/icons/editable-icon.svg"})
              );
    };
  },

  handleIconClick: function () {
    this.setState({editable: true})
  },

  handleChange: function (evt) {
    this.setState({initValue: evt.target.value})
  },

  handleBlur: function (evt) {
    this.setState({editable: false});
    chrome.runtime.sendMessage({
      action: 'updateAssignment',
      assignmentId: this.props.id,
      newTitle: this.state.initValue
    });
  }
});
